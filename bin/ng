#!/usr/bin/env node
'use strict';

// var Liftoff = require('liftoff');
// var argv = require('minimist')(process.argv.slice(2));
// require('./../lib/utils/debug');

// // set env var for ORIGINAL cwd
// // before anything touches it
// process.env.INIT_CWD = process.cwd();

// var cli = new Liftoff({
//   name: 'ng',
//   processTitle: 'ng',
//   moduleName: 'ng-cli',
//   configName: 'ngfactory',
//   extensions: {
//     '.js': null,
//     '.json': null,
//     '.coffee': 'coffee-script/register'
//   },
//   nodeFlags: ['--harmony']
// });

// cli.launch({
//   cwd: argv.cwd
// }, function(env) {
//   dd(env);
//   require(env.modulePath)({
//     env: env,
//     argv: argv,
//     inputStream: process.stdin,
//     outputStream: process.stdout
//   });
// });

// Provide a title to the process in `ps`
process.title = 'ng';

var resolve = require('resolve');

resolve('ng-cli', {
  basedir: process.cwd()
}, function(error, projectLocalCli) {
  var cli;
  if (error) {
    // If there is an error, resolve could not find the ng-cli
    // library from a package.json. Instead, include it from a relative
    // path to this script file (which is likely a globally installed
    // npm package). Most common cause for hitting this is `ng new`
    cli = require('../lib');
  } else {
    // No error implies a projectLocalCli, which will load whatever
    // version of ng-cli you have installed in a local package.json
    cli = require(projectLocalCli);
  }

  cli({
    cliArgs: process.argv.slice(2),
    inputStream: process.stdin,
    outputStream: process.stdout
  })//.then(process.exit);
});
